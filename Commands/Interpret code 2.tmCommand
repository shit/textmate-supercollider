<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

menuscript = %q{
-- `menu_click`, by Jacob Rus, September 2006
on menu_click(mList)
	local appName, topMenu, r
	
	-- Validate our input
	if mList's length &lt; 3 then error "Menu list is not long enough"
	
	-- Set these variables for clarity and brevity later on
	set {appName, topMenu} to (items 1 through 2 of mList)
	set r to (items 3 through (mList's length) of mList)
	
	-- This overly-long line calls the menu_recurse function with
	-- two arguments: r, and a reference to the top-level menu
	tell application "System Events" to my menu_click_recurse(r, ((process appName)'s Â¬
		(menu bar 1)'s (menu bar item topMenu)'s (menu topMenu)))
end menu_click

on menu_click_recurse(mList, parentObject)
	local f, r
	
	-- `f` = first item, `r` = rest of items
	set f to item 1 of mList
	if mList's length &gt; 1 then set r to (items 2 through (mList's length) of mList)
	
	-- either actually click the menu item, or recurse again
	tell application "System Events"
		if mList's length is 1 then
			click parentObject's menu item f
		else
			my menu_click_recurse(r, (parentObject's (menu item f)'s (menu f)))
		end if
	end tell
end menu_click_recurse
}

selected = ENV['TM_SELECTED_TEXT'];
currentline = ENV['TM_CURRENT_LINE'];

if selected
	%x{
		osascript &lt;&lt; ENDOSA
		tell application "TextMate" to activate
		menu_click({"TextMate", "TextMate", "Services", "Execute in SuperCollider..."})
		tell application "TextMate" to activate
		#{menuscript}
		ENDOSA
	}
else
	%x{
		osascript &lt;&lt; ENDOSA
		tell application "TextMate" to activate
		menu_click({"TextMate", "Edit", "Select", "Line"})
		menu_click({"TextMate", "TextMate", "Services", "Execute in SuperCollider..."})
		tell application "TextMate" to activate
		#{menuscript}
		ENDOSA
	}
end
</string>
	<key>fallbackInput</key>
	<string>line</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string></string>
	<key>name</key>
	<string>Interpret</string>
	<key>output</key>
	<string>discard</string>
	<key>uuid</key>
	<string>FB64DE22-E1F3-48CC-AE67-21B7E008ADD5</string>
</dict>
</plist>
